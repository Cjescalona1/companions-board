{"version":3,"file":"static/js/256.e9f40f8d.chunk.js","mappings":"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F,EAWYlN,EAAAA,QAAU,SACrBgR,EACA8G,EACAsK,EACA5B,GAEA,OAAOjY,EAAOC,KACZ6T,EAAUiG,aAAa/B,WAAW/X,KAAKsP,GAAYsK,EAAO7B,WAAW/X,KAAKwI,GAAUwP,GAEvF,EASYxgB,EAAAA,KAAO,SAASkN,EAAmBI,GAE9C,OAAO/E,EAAOC,KAAK6T,EAAUkG,KAAKhC,WAAW/X,KAAK0E,GAAYqT,WAAW/X,KAAK8E,GAAa,IAC5F,EAEYtN,EAAAA,WAAa,SACxBkN,EACAI,EACAkT,GAKA,GAAyB,KAArBtT,EAAU3J,QAAsC,KAArB2J,EAAU3J,OACvC,MAAM,IAAIkd,WAAW,gCAIvB,GAA0B,KAAtBnT,EAAW/J,OACb,MAAM,IAAIkd,WAAW,iCAGvB,OAAOlY,EAAOC,KACZ6X,EAAYmC,WAAWjC,WAAW/X,KAAK0E,GAAYqT,WAAW/X,KAAK8E,GAAakT,GAEnF,6GCpZD,IAAMiC,EAAmCla,EAAOC,KAAK,CAEnD,GACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIka,EAAqCna,EAAOC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGFxI,EAAAA,iBAA2B,SACzBsN,EACAJ,EACAsT,QAAA,QAAAA,GAAAA,GAEA,IAAMlH,EAAS/Q,EAAOC,KACpBgY,EAAaiC,EAAmCC,GAIlD,OAFApV,EAAWzD,KAAKyP,EAAQkH,EAAa,EAAI,GACzCtT,EAAUrD,KAAKyP,EAAQkH,EAAa,IAAM,KACnClH,CACR,EAEDtZ,EAAAA,iBAA2B,SAASsN,GAClC,IAAM/J,EAAS+J,EAAW/J,OAGtBkE,EAAQ,EACZ,GAAIlE,EAASkE,EAAQ,GAA2B,KAAtB6F,EAAW7F,GAAiB,OAAO,KAI7D,GAAIlE,GAHJkE,GAAS,GAGY,KAA2B,IAApB6F,EAAW7F,IAAgB,OAAO,KAE9D,IAAMkb,EAA2B,IAApBrV,EAAW7F,GAExB,GAAIkb,EAAO,GAAKA,EAAO,EAAG,OAAO,KACjC,GAAIpf,GAFJkE,GAAS,GAEYkb,EAAM,OAAO,KAGlC,IAAMC,EAAMtV,EAAW7F,EAAQkb,EAAO,IAAMA,EAAO,EAAIrV,EAAW7F,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","sources":["../node_modules/@ethereumjs/common/src/chains/index.ts","../node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/common/src/index.ts","../node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../../src/account.ts","../../src/bytes.ts","../../src/constants.ts","../../src/hash.ts","../../src/index.ts","../../src/object.ts","../../src/secp256k1v3-adapter.ts","../../../src/secp256k1v3-lib/der.ts","../../../src/secp256k1v3-lib/index.ts","../../src/signature.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/crc-32/crc32.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["import { Chain, chainsType } from './../types'\nimport mainnet from './mainnet.json'\nimport ropsten from './ropsten.json'\nimport rinkeby from './rinkeby.json'\nimport kovan from './kovan.json'\nimport goerli from './goerli.json'\nimport sepolia from './sepolia.json'\n\n/**\n * @hidden\n */\nexport function _getInitializedChains(customChains?: Chain[]) {\n  const names: any = {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli',\n    '11155111': 'sepolia',\n  }\n  const chains: any = {\n    mainnet,\n    ropsten,\n    rinkeby,\n    kovan,\n    goerli,\n    sepolia,\n  }\n  if (customChains) {\n    for (const chain of customChains) {\n      const name = chain.name\n      names[chain.chainId.toString()] = name\n      chains[name] = chain\n    }\n  }\n\n  chains['names'] = names\n  return chains\n}\n\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexport const chains: chainsType = _getInitializedChains()\n","import { eipsType } from './../types'\n\nexport const EIPs: eipsType = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  5133: require('./5133.json'),\n}\n","export const hardforks = [\n  ['chainstart', require('./chainstart.json')],\n  ['homestead', require('./homestead.json')],\n  ['dao', require('./dao.json')],\n  ['tangerineWhistle', require('./tangerineWhistle.json')],\n  ['spuriousDragon', require('./spuriousDragon.json')],\n  ['byzantium', require('./byzantium.json')],\n  ['constantinople', require('./constantinople.json')],\n  ['petersburg', require('./petersburg.json')],\n  ['istanbul', require('./istanbul.json')],\n  ['muirGlacier', require('./muirGlacier.json')],\n  ['berlin', require('./berlin.json')],\n  ['london', require('./london.json')],\n  ['shanghai', require('./shanghai.json')],\n  ['arrowGlacier', require('./arrowGlacier.json')],\n  ['grayGlacier', require('./grayGlacier.json')],\n  ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n  ['merge', require('./merge.json')],\n]\n","import { EventEmitter } from 'events'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { BN, BNLike, toType, TypeOutput, intToBuffer } from 'ethereumjs-util'\nimport { _getInitializedChains } from './chains'\nimport { hardforks as HARDFORK_CHANGES } from './hardforks'\nimport { EIPs } from './eips'\nimport {\n  BootstrapNode,\n  Chain as IChain,\n  GenesisBlock,\n  GenesisState,\n  Hardfork as HardforkParams,\n} from './types'\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n\nexport enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\ninterface BaseOpts {\n  /**\n   * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n   *\n   * Default: Hardfork.Istanbul\n   */\n  hardfork?: string | Hardfork\n  /**\n   * Limit parameter returns to the given hardforks\n   */\n  supportedHardforks?: Array<string | Hardfork>\n  /**\n   * Selected EIPs which can be activated, please use an array for instantiation\n   * (e.g. `eips: [ 2537, ]`)\n   *\n   * Currently supported:\n   *\n   * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n   */\n  eips?: number[]\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n  /**\n   * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n   * either from a chain directly supported or a custom chain\n   * passed in via {@link CommonOpts.customChains}.\n   */\n  chain: string | number | Chain | BN | object\n  /**\n   * Initialize (in addition to the supported chains) with the selected\n   * custom chains\n   *\n   * Usage (directly with the respective chain intialization via the {@link CommonOpts.chain} option):\n   *\n   * Pattern 1 (without genesis state):\n   *\n   * ```javascript\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n   * ```\n   *\n   * Pattern 2 (with genesis state see {@link GenesisState} for format):\n   *\n   * ```javascript\n   * const simpleState = {\n   *   '0x0...01': '0x100', // For EoA\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * import chain1GenesisState from '[PATH_TO_GENESIS_STATES]/chain1GenesisState.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, simpleState ] ]})\n   * ```\n   *\n   * Pattern 3 (with complex genesis state, containing contract accounts and storage).\n   * Note that in {@link AccountState} there are two\n   * accepted types. This allows to easily insert accounts in the genesis state:\n   *\n   * A complex genesis state with Contract and EoA states would have the following format:\n   *\n   * ```javascript\n   * const complexState = {\n   *   '0x0...01': '0x100', // For EoA\n   *   '0x0...02': ['0x1', '0xRUNTIME_BYTECODE', [[ keyOne, valueOne ], [ keyTwo, valueTwo ]]] // For contracts\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, complexState ] ]})\n   * ```\n   */\n  customChains?: IChain[] | [IChain, GenesisState][]\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n  /**\n   * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n   * a standard chain used to base the custom chain params on.\n   */\n  baseChain?: string | number | Chain | BN\n}\n\ninterface hardforkOptions {\n  /** optional, only allow supported HFs (default: false) */\n  onlySupported?: boolean\n  /** optional, only active HFs (default: false) */\n  onlyActive?: boolean\n}\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport default class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: IChain\n  private _hardfork: string | Hardfork\n  private _supportedHardforks: Array<string | Hardfork> = []\n  private _eips: number[] = []\n  private _customChains: IChain[] | [IChain, GenesisState][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<IChain> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  static forCustomChain(\n    baseChain: string | number | Chain,\n    customChainParams: Partial<IChain>,\n    hardfork?: string | Hardfork,\n    supportedHardforks?: Array<string | Hardfork>\n  ): Common {\n    const standardChainParams = Common._getChainParams(baseChain)\n\n    return new Common({\n      chain: {\n        ...standardChainParams,\n        ...customChainParams,\n      },\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks,\n    })\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: BN): boolean {\n    const initializedChains: any = _getInitializedChains()\n    return Boolean(initializedChains['names'][chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | BN,\n    customChains?: IChain[]\n  ): IChain {\n    const initializedChains: any = _getInitializedChains(customChains)\n    if (typeof chain === 'number' || BN.isBN(chain)) {\n      chain = chain.toString()\n\n      if (initializedChains['names'][chain]) {\n        const name: string = initializedChains['names'][chain]\n        return initializedChains[name]\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain]\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  /**\n   *\n   * @constructor\n   */\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Istanbul\n    for (const hf of this._chainParams.hardforks) {\n      if (!hf.forkHash) {\n        hf.forkHash = this._calcForkHash(hf.name)\n      }\n    }\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.supportedHardforks) {\n      this._supportedHardforks = opts.supportedHardforks\n    }\n    if (opts.hardfork) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | BN | object): any {\n    if (typeof chain === 'number' || typeof chain === 'string' || BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      let plainCustomChains: IChain[]\n      if (\n        this._customChains &&\n        this._customChains.length > 0 &&\n        Array.isArray(this._customChains[0])\n      ) {\n        plainCustomChains = (this._customChains as [IChain, GenesisState][]).map((e) => e[0])\n      } else {\n        plainCustomChains = this._customChains as IChain[]\n      }\n      this._chainParams = Common._getChainParams(chain, plainCustomChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or BN when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if ((<any>chain)[param] === undefined) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as IChain\n    } else {\n      throw new Error('Wrong input format')\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    let existing = false\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    td = toType(td, TypeOutput.BN)\n\n    let hardfork = Hardfork.Chainstart\n    let minTdHF\n    let maxTdHF\n    let previousHF\n    for (const hf of this.hardforks()) {\n      // Skip comparison for not applied HFs\n      if (hf.block === null) {\n        if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n          if (td.gte(new BN(hf.td))) {\n            return hf.name\n          }\n        }\n        continue\n      }\n      if (blockNumber.gte(new BN(hf.block))) {\n        hardfork = hf.name as Hardfork\n      }\n      if (td && hf.td) {\n        if (td.gte(new BN(hf.td))) {\n          minTdHF = hf.name\n        } else {\n          maxTdHF = previousHF\n        }\n      }\n      previousHF = hf.name\n    }\n    if (td) {\n      let msgAdd = `block number: ${blockNumber} (-> ${hardfork}), `\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          const msg = 'HF determined by block number is lower than the minimum total difficulty HF'\n          msgAdd += `total difficulty: ${td} (-> ${minTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          const msg = 'Maximum HF determined by total difficulty is lower than the block number HF'\n          msgAdd += `total difficulty: ${td} (-> ${maxTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n    }\n    return hardfork\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  _chooseHardfork(hardfork?: string | Hardfork | null, onlySupported: boolean = true): string {\n    if (!hardfork) {\n      hardfork = this._hardfork\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  _getHardfork(hardfork: string | Hardfork): any {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    throw new Error(`Hardfork ${hardfork} not defined for chain ${this.chainName()}`)\n  }\n\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  _isSupportedHardfork(hardfork: string | Hardfork | null): boolean {\n    if (this._supportedHardforks.length > 0) {\n      for (const supportedHf of this._supportedHardforks) {\n        if (hardfork === supportedHf) return true\n      }\n    } else {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs) {\n        ;(EIPs[eip].requiredEIPs as number[]).forEach((elem) => {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        })\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n  param(topic: string, name: string): any {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== null) {\n        return value\n      }\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): any {\n    hardfork = this._chooseHardfork(hardfork)\n\n    let value = null\n    for (const hfChanges of HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = valueEIP !== null ? valueEIP : value\n        }\n        // Paramater-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (!hfChanges[1][topic]) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): any {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return null\n    }\n    const value = eipParams[topic][name].v\n    return value\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  paramByBlock(topic: string, name: string, blockNumber: BNLike): any {\n    const activeHfs = this.activeHardforks(blockNumber)\n    const hardfork = activeHfs[activeHfs.length - 1]['name']\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if (hf['eips'].includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(\n    hardfork: string | Hardfork | null,\n    blockNumber: BNLike,\n    opts: hardforkOptions = {}\n  ): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BNLike, opts?: hardforkOptions): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(\n    hardfork1: string | Hardfork | null,\n    hardfork2: string | Hardfork,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported)\n\n    let hardforks\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts)\n    } else {\n      hardforks = this.hardforks()\n    }\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork, opts?: hardforkOptions): boolean {\n    return this.hardforkGteHardfork(null, hardfork, opts)\n  }\n\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  hardforkIsActiveOnChain(\n    hardfork?: string | Hardfork | null,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    for (const hf of this.hardforks()) {\n      if (hf['name'] === hardfork && hf['block'] !== null) return true\n    }\n    return false\n  }\n\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  activeHardforks(blockNumber?: BNLike | null, opts: hardforkOptions = {}): HardforkParams[] {\n    const activeHardforks: HardforkParams[] = []\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['block'] === null) continue\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue\n\n      activeHardforks.push(hf)\n    }\n    return activeHardforks\n  }\n\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  activeHardfork(blockNumber?: BNLike | null, opts: hardforkOptions = {}): string {\n    const activeHardforks = this.activeHardforks(blockNumber, opts)\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name']\n    } else {\n      throw new Error(`No (supported) active hardfork found`)\n    }\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n  hardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.hardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this._getHardfork(hardfork)['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return new BN(block)\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTD(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const td = this._getHardfork(hardfork)['td']\n    if (td === undefined || td === null) {\n      return null\n    }\n    return new BN(td)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this.hardforkBlockBN(hardfork)\n    return block ? block.eq(blockNumber) : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.nextHardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n  nextHardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: BN | null, hf: HardforkParams) => {\n      const block = new BN(hf.block!)\n      return block.gt(hfBlock) && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isNextHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const nextHardforkBlock = this.nextHardforkBlockBN(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork) {\n    const genesis = Buffer.from(this.genesis().hash.substr(2), 'hex')\n\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlock = 0\n    for (const hf of this.hardforks()) {\n      const block = hf.block\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same block number HFs\n      if (block !== 0 && block !== null && block !== prevBlock) {\n        const hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n      }\n\n      if (hf.name === hardfork) break\n      if (block !== null) {\n        prevBlock = block\n      }\n    }\n    const inputBuffer = Buffer.concat([genesis, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n  forkHash(hardfork?: string | Hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const data = this._getHardfork(hardfork)\n    if (data['block'] === null && data['td'] === undefined) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash']\n    }\n    return this._calcForkHash(hardfork)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): any | null {\n    const resArray = this.hardforks().filter((hf: any) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlock {\n    return this._chainParams['genesis']\n  }\n\n  /**\n   * Returns the Genesis state of the current chain,\n   * all values are provided as hex-prefixed strings.\n   */\n  genesisState(): GenesisState {\n    // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json')\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json')\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json')\n      case 'kovan':\n        return require('./genesisStates/kovan.json')\n      case 'goerli':\n        return require('./genesisStates/goerli.json')\n      case 'sepolia':\n        return require('./genesisStates/sepolia.json')\n    }\n\n    // Custom chains with genesis state provided\n    if (\n      this._customChains &&\n      this._customChains.length > 0 &&\n      Array.isArray(this._customChains[0])\n    ) {\n      for (const chainArrayWithGenesis of this._customChains as [IChain, GenesisState][]) {\n        if (chainArrayWithGenesis[0].name === this.chainName()) {\n          return chainArrayWithGenesis[1]\n        }\n      }\n    }\n\n    return {}\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkParams[] {\n    return this._chainParams['hardforks']\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNode[] {\n    return this._chainParams['bootstrapNodes']\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams['dnsNetworks']!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n  chainId(): number {\n    return toType(this.chainIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainIdBN(): BN {\n    return new BN(this._chainParams['chainId'])\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams['name']\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n  networkId(): number {\n    return toType(this.networkIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkIdBN(): BN {\n    return new BN(this._chainParams['networkId'])\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['algorithm'] as ConsensusAlgorithm\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusConfig(): { [key: string]: any } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    const consensusAlgorithm = this.consensusAlgorithm()\n    return this._chainParams['consensus']![consensusAlgorithm as ConsensusAlgorithm]\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n}\n","import Common, { Chain, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  BN,\n  toBuffer,\n  MAX_INTEGER,\n  MAX_UINT64,\n  unpadBuffer,\n  ecsign,\n  publicToAddress,\n  BNLike,\n  bufferToHex,\n} from 'ethereumjs-util'\nimport {\n  TxData,\n  JsonTx,\n  AccessListEIP2930ValuesArray,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559ValuesArray,\n  FeeMarketEIP1559TxData,\n  TxValuesArray,\n  Capability,\n  TxOptions,\n} from './types'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: BN\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: BN\n  public readonly gasLimit: BN\n  public readonly to?: Address\n  public readonly value: BN\n  public readonly data: Buffer\n\n  public readonly v?: BN\n  public readonly r?: BN\n  public readonly s?: BN\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Istanbul\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = new BN(toBuffer(type)).toNumber()\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = new BN(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = new BN(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = new BN(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? new BN(vB) : undefined\n    this.r = rB.length > 0 ? new BN(rB) : undefined\n    this.s = sB.length > 0 ? new BN(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Alias for {@link BaseTransaction.type}\n   *\n   * @deprecated Use `type` instead\n   */\n  get transactionType(): number {\n    return this.type\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): BN {\n    const fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'))\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost: number | BN = 0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    cost = new BN(cost)\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = Math.ceil(this.data.length / 32)\n      const initCodeCost = new BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(\n        dataLength\n      )\n      cost.iadd(initCodeCost)\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): BN\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: number, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BNLike) {\n    // Chain ID provided\n    if (chainId) {\n      const chainIdBN = new BN(toBuffer(chainId))\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.forCustomChain(\n            this.DEFAULT_CHAIN,\n            {\n              name: 'custom-chain',\n              networkId: chainIdBN,\n              chainId: chainIdBN,\n            },\n            this.DEFAULT_HARDFORK\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: BN | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value?.gte(MAX_UINT64)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_UINT64)) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value?.gte(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  N_DIV_2,\n  TxOptions,\n} from './types'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: BN\n  public readonly maxFeePerGas: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    if (!this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = new BN(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = new BN(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    if (this.gasLimit.mul(this.maxFeePerGas).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas.lt(this.maxPriorityFeePerGas)) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: BN = new BN(0)): BN {\n    const inclusionFeePerGas = BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee))\n    const gasPrice = inclusionFeePerGas.add(baseFee)\n    return this.gasLimit.mul(gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bnToUnpaddedBuffer(this.maxFeePerGas),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      maxPriorityFeePerGas: bnToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bnToHex(this.maxFeePerGas),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n  N_DIV_2,\n} from './types'\n\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport default class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = new BN(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { yParity, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        yParity!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","export { default as Transaction } from './legacyTransaction'\nexport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { default as TransactionFactory } from './transactionFactory'\nexport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport * from './types'\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  MAX_INTEGER,\n  rlp,\n  rlphash,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport { TxOptions, TxData, JsonTx, N_DIV_2, TxValuesArray, Capability } from './types'\nimport { BaseTransaction } from './baseTransaction'\nimport Common from '@ethereumjs/common'\nimport { checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 0\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport default class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = new BN(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        const v = this.v!\n        const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainIdBN()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { rlp } from 'ethereumjs-util'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = rlp.encode(message) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return rlphash(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n    //  throw new Error(msg)\n    //}\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = rlphash(this.raw())\n      }\n      return this.cache.hash\n    }\n\n    return rlphash(this.raw())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return rlphash(message)\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: number, r: Buffer, s: Buffer) {\n    const vBN = new BN(v)\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8))\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v: vBN,\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(v?: BN, common?: Common): Common {\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    let chainIdBN\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      !v.eqn(27) &&\n      !v.eqn(28)\n    ) {\n      if (common) {\n        const chainIdDoubled = common.chainIdBN().muln(2)\n        const isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n        if (!isValidEIP155V) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainIdBN()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if (v.subn(35).isEven()) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2)\n      }\n    }\n    return this._getCommon(common, chainIdBN)\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _unsignedTxImplementsEIP155() {\n    return this.common.gteHardfork('spuriousDragon')\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _signedTxImplementsEIP155() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon')\n\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    const v = this.v!\n\n    const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n    const vAndChainIdMeetEIP155Conditions =\n      v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { BN, toBuffer } from 'ethereumjs-util'\nimport {\n  TxOptions,\n  TypedTransaction,\n  TxData,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n} from './types'\nimport { Transaction, AccessListEIP2930Transaction, FeeMarketEIP1559Transaction } from '.'\nimport Common from '@ethereumjs/common'\n\nexport default class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = new BN(toBuffer(txData.type)).toNumber()\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   * This helper method allows one to retrieve the class which matches the transactionID\n   * If transactionID is undefined, returns the legacy transaction class.\n   * @deprecated - This method is deprecated and will be removed on the next major release\n   * @param transactionID\n   * @param _common - This option is not used\n   */\n  public static getTransactionClass(transactionID: number = 0, _common?: Common) {\n    const legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff)\n\n    if (legacyTxn) {\n      return Transaction\n    }\n\n    switch (transactionID) {\n      case 1:\n        return AccessListEIP2930Transaction\n      case 2:\n        return FeeMarketEIP1559Transaction\n      default:\n        throw new Error(`TypedTransaction with ID ${transactionID} unknown`)\n    }\n  }\n}\n","import { BN, AddressLike, BNLike, BufferLike, PrefixedHexString } from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { default as Transaction } from './legacyTransaction'\nimport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BNLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BNLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BNLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BNLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BNLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BNLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BNLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BNLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BNLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/**\n * A const defining secp256k1n/2\n */\nexport const N_DIV_2 = new BN(\n  '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n  16\n)\n","import Common from '@ethereumjs/common'\nimport { bufferToHex, setLengthLeft, toBuffer } from 'ethereumjs-util'\nimport { AccessList, AccessListBuffer, AccessListItem, isAccessList } from './types'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (accessList && isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost\n  }\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n",null,null,null,null,null,null,null,null,null,null,"import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{ chainId: chainConfig.chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { stripHexPrefix } from \"ethereumjs-util\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { isValidAddress } from \"ethereumjs-util\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { privateToAddress, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, BN, stripHexPrefix } from \"ethereumjs-util\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import Common, { Hardfork } from \"@ethereumjs/common\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["_getInitializedChains","customChains","names","chains","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1_1","chain","name_1","name","chainId","toString","exports","require","CustomChain","Hardfork","Chain","ConsensusType","ConsensusAlgorithm","opts","_super","_this","_customChains","_b","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","_c","Istanbul","hardforks","_e","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","_supportedHardforks","hardfork","setHardfork","eips","setEIPs","__extends","Common","chainParamsOrName","baseChain","_a","standardChainParams","_getChainParams","__assign","PolygonMainnet","custom","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","customChainParams","initializedChains","Boolean","ethereumjs_util_1","isBN","plainCustomChains","this","length","Array","isArray","map","e","required_1_1","param","undefined","_isSupportedHardfork","existing","HARDFORK_CHANGES_1_1","emit","blockNumber","td","toType","BN","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","msgAdd","concat","hardforkGteHardfork","msg","getHardforkByBlockNumber","onlySupported","hfs","hfs_1_1","chainName","eip","eips_1","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2_1","_eips","topic","value","paramByEIP","paramByHardfork","_chooseHardfork","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1_1","valueEIP","v","eipParams","activeHfs","activeHardforks","HARDFORK_CHANGES_3_1","hfBlock","hardforkBlockBN","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2_1","_d","hfs_2_1","push","Number","_getHardfork","eq","nextHardforkBlockBN","reduce","acc","gt","nextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","inputBuffer","forkhash","intToBuffer","data","resArray","filter","chainArrayWithGenesis","chainIdBN","networkIdBN","HARDFORK_CHANGES_4_1","HARDFORK_CHANGES_5_1","HARDFORK_CHANGES_6_1","consensusAlgorithm","copy","Object","assign","create","getPrototypeOf","removeAllListeners","events_1","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","common_1","Mainnet","nonce","gasLimit","to","r","s","type","_type","toBuffer","toNumber","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","BaseTransaction","capability","stringError","errors","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","common","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","i","dataLength","Math","ceil","initCodeCost","imuln","iadd","buf","publicKey","getSenderPublicKey","unpadBuffer","publicToAddress","privateKey","_errorMsg","hackApplied","supports","types_1","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","indexOf","splice","isSupportedChainId","forCustomChain","values","bits","cannotEqual","entries","key","bufferToHex","postfix","TRANSACTION_TYPE_BUFFER","accessList","maxFeePerGas","maxPriorityFeePerGas","_getCommon","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","checkMaxInitCodeSize","freeze","FeeMarketEIP1559Transaction","serialized","slice","equals","decode","fromValuesArray","fromSerializedTx","validateNoLeadingZeroes","call","getDataFeeEIP2930","isFrozen","baseFee","gasPrice","min","sub","add","bnToUnpaddedBuffer","base","raw","encode","hashMessage","message","keccak256","serialize","getMessageToVerifySignature","ecrecover","fromTxData","accessListJSON","getAccessListJSON","bnToHex","errorStr","_getSharedErrorPostfix","baseTransaction_1","AccessListEIP2930Transaction","yParity","enumerable","get","default","__exportStar","_validateTxV","chainIdDoubled","muln","Transaction","_getMessageToSign","rlphash","vBN","ltn","numSub","subn","isEven","divn","onEIP155BlockOrLater","TransactionFactory","txType","_1","EIP","isBuffer","fromSerializedData","transactionID","_common","isAccessListBuffer","input","firstItem","Capability","AccessLists","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","encrypt","version","utils_1","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","output","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","concatSig","normalize","getPublicKeyFor","signature","messageHash","sig","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","join","encodeField","types","V3","V4","encodeData","lastIndexOf","parsedType","typeValuePairs","ethereumjs_abi_1","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","result","unsortedDeps","findTypeDependencies","delete","deps","sort","t","results","Set","match","has","hashStruct","sanitizeData","sanitizedData","properties","EIP712Domain","_typedSignatureHash","typedData","error","schema","fill","additionalProperties","items","required","domain","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","test","String","prototype","ethjs_util_1","rSig","sSig","vSig","rStr","sStr","vStr","sigParams","buffer","toLowerCase","assert","ethjsUtil","secp256k1","addr","bytes_1","eip1191ChainId","stripHexPrefix","prefix","hash_1","ret","parseInt","toUpperCase","nonceBN","isZero","toArray","salt","initCode","fromBuf","saltBuf","initCodeBuf","a","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","bytes","allocUnsafe","right","first","isHexString","padToEven","toArrayLike","num","fromTwos","toTwos","str","isHexPrefixed","ba","array","keccak224","keccak384","k256","keccak512","createHash","update","digest","padded","rlp","self","fields","_fields","toJSON","label","obj_1","getter","setter","allowZero","allowLess","defineProperty","configurable","set","alias","d","keys_1","secp256k1v3","der","Uint8Array","compressed","RangeError","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","publicKeyCombine","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","ec","EC","ecparams","curve","ucmp","n","point","g","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","isOdd","calculateSigRecovery","isValidSigRecovery","sign","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","cmp","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","_validateAndNormalizeKeyholder","req","_context","accounts","normalizedAccounts","_address","normalizedAddress","ethErrors","_lookupAccounts","res","_context2","_lookupDefaultAccount","_context3","_sendTransaction","_context4","txParams","params","_signTransaction","_context5","_ethSign","_context6","extraParams","msgParams","_signTypedData","_context7","_signTypedDataV","_context8","_signTypedDataV2","_context9","_personalSign","_context10","firstParam","secondParam","warning","_encryptionPublicKey","_context11","_decryptMessage","_context12","_fetchPrivateKey","_context13","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","next","end","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","connector","_getPrivateKey","_","_processTransaction","sendTransaction","_processSignTransaction","signTransaction","_processEthSignMessage","signMessage","_processPersonalMessage","signPersonalMessage","_processTypedMessage","signTypedData","WalletConnectProvider","_inherits","config","state","_classCallCheck","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","_defineProperty","_createClass","_enable","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_switchChain","addChain","_ref2$addChain","lookup","currentChainConfig","getChainConfig","displayName","sendCustomRequest","rpcUrls","log","configure","lookupNetwork","WalletInitializationError","_get","connected","WalletLoginError","provider","connectedHexChainId","isHexStrict","getProviderHandlers","ethMiddleware","engine","JRPCEngine","_createJsonRpcClient","providerFromEngine","updateProviderEngineProxy","on","_ref3","payload","_this2","_payload$params$","connectedChainId","rpcUrl","maybeConfig","BaseProvider","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","hex","dec","toNormalizedDenomination","WEI","bigNumber","div","GWEI","ETH","toSpecifiedDenomination","times","dp","baseChange","conversionUtil","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","fetchEip1159GasEstimates","_fetchEip1159GasEstimates","url","estimates","normalizedEstimates","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","_fetchLegacyGasPriceEstimates","referrer","referrerPolicy","mode","SafeGasPrice","ProposeGasPrice","FastGasPrice","validateTypedMessageParams","parameters","activeChainId","_typeof","isValidAddress","typedSignatureHash","validation","jsonschema","TYPED_MESSAGE_SCHEMA","_data$domain","isNaN","signTx","_signTx","privKey","txFormatter","formatTransaction","finalTxParams","getCommonConfiguration","unsignedEthTx","signedTx","getProviderEngineProxy","privateToAddress","providerEngineProxy","txHash","rawMessageSig","privKeyBuffer","personalSign","finalChainId","_processTypedMessageV","_processTypedMessageV2","_processEncryptionPublicKey","getEncryptionPublicKey","stripped","buff","inputBn","addHexPrefix","hexToBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","_init","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","_getCommonConfiguration","_this$chainConfig","clonedTxParams","gas","getDefaultGasLimit","defaultGasLimit","getDefaultGasFees","_yield$this$getDefaul","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","b","_fetchEthGasPriceEstimate","_getEIP1559Compatibility","latestBlock","supportsEIP1559","baseFeePerGas","_fetchGasFeeEstimateData","isLegacyGasAPICompatible","replace","EIP1559APIEndpoint","gasData","gasFeeEstimates","gasEstimateType","LegacyGasAPIEndpoint","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","_yield$this$fetchGasF","_gasFeeEstimates$medi","_yield$this$fetchEthG","txMeta","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","estimateTxGas","blockGasLimit","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","txParameters","txCategory","transactionCategory","determineTransactionCategory","_yield$this$determine","analyzeGasUsage","_yield$this$analyzeGa","addGasBuffer","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","init","_lookupNetwork","network","chainSwitchHandlers","blockExplorerUrls","nativeCurrency","ticker","symbol","tickerName","blockExplorer","switchChain","_addNewChain","chainParams","_updateChain","wallet_addEthereumChain","wallet_switchEthereumChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref2","_updateAccount","accountParams","wallet_updateAccount","createAccountMiddleware","factory","CRC32","T0","c","table","Int32Array","signed_crc_table","TT","T","out","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","charCodeAt","B","DO_NOT_EXPORT_CRC","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","ctx","callback","throwError","throwAll","validateSchema","valid","Function","getEnumerableProperty","object","hasOwnProperty","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","some","testType","list","id","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","count","if","isSchema","ifValid","then","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","RegExp","minProperties","maxProperties","every","additionalItems","contains","minimum","number","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","max","pow","round","testArrays","j","deepCompareStrict","multipleOf","divisibleBy","string","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","module","uri","ValidationError","path","sum","makeSuffix","stack","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","constructor","SchemaContext","schemas","resolve","target","propertyName","FORMAT_REGEXPS","parseFloat","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","o","k","split","shift","decodeURIComponent","encodePath","decimalPlaces","decimalParts","val","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","substring","scanArray","extends","scanObject","definitions","p","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","document","isFinite","integer","boolean","date","Date","any","root","f","util","validateBase64","unescape","arr","fromCharCode","escape","atob","btoa","gf","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","h","l","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","m","mpos","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","q","pack25519","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","carry","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","arguments","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","detached","verify","fromSeed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues"],"sourceRoot":""}